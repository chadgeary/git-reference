#!/bin/bash
PUBKEYFILE="$HOME/.ssh/id_rsa.pub"
PRIKEYFILE="$HOME/.ssh/id_rsa"

# ssh key creation if none exists
if [ ! -f $PUBKEYFILE ]
then
  # if no private key
  if [ ! -f $PRIKEYFILE ]
  then
    echo "Creating key pair..."
    # create private + public pair
    yes "" | ssh-keygen -N "" >&- 2>&-
  else
    echo "Creating pubkey from privkey..."
    # else create public from private
    ssh-keygen -y -f $PRIKEYFILE > $PUBKEYFILE
  fi
fi

# github name in config
grep --quiet 'name = ' ~/.gitconfig
if [ $? != 0 ]
then
  echo "github (user)name:"
  read GH_NAME
  git config --global user.name "$GH_USERNAME"
fi

# github email in config
grep --quiet 'email = ' ~/.gitconfig
if [ $? != 0 ]
then
  echo "github (user)email:"
  read GH_EMAIL
  git config --global user.email "$GH_EMAIL"
fi

# github token if not present
grep --quiet 'token = ' ~/.gitconfig
if [ $? != 0 ]
then
  echo "Create a personal access token @ https://github.com/settings/tokens"
  echo "github (user)token:"
  read GH_TOKEN
  git config --global user.token "$GH_TOKEN"
  chmod go-rw ~/.gitconfig
fi

GH_NAME=$(awk '/name = / { print $3}' ~/.gitconfig)
GH_TOKEN=$(awk '/token = / { print $3 }' ~/.gitconfig)

# github add ssh key via api with password
PUBKEYDATA=$(cat $PUBKEYFILE | tr -d '\n')
TIMESTAMP=$(date +"%Y-%m-%d-%H-%M-%S")
JSONDATA=$(mktemp)

# generate JSONKEY file
echo "Creating temporary json keyfile $JSONDATA..."
printf '{"title":"'"sshkey-$TIMESTAMP"'", "key":"'"$PUBKEYDATA"'"}' > $JSONDATA

# auth and post key
curl -u "$GH_USER:$GH_TOKEN" -H "Content-Type: application/json" -d @$JSONDATA  https://api.github.com/user/keys

# remove JSONKEY file
echo "Removing temporary json keyfile $JSONDATA..."
rm -f $JSONDATA
